#!/bin/bash

# Generates and uploads Happo diffs for the differences between the base commit
# and current commit.

# Make the whole script fail on errors
set -eou pipefail

# Initialize optional env variables
INSTALL_CMD=${INSTALL_CMD:-}

echo "Using the following ENV variables:"
echo "PREVIOUS_SHA: ${PREVIOUS_SHA}"
echo "CURRENT_SHA: ${CURRENT_SHA}"
echo "CHANGE_URL: ${CHANGE_URL}"
echo "INSTALL_CMD: ${INSTALL_CMD}"

# Get a custom package manager command from environment variables
NPM_CLIENT="$PACKAGE_MANAGER_CMD"

# If no custom command was passed infer what package manager to use
if [ -z NPM_CLIENT ]; then
  NPM_CLIENT="npm"

  if [ -f "yarn.lock" ]; then
    echo "Detected yarn.lock - using yarn to install dependencies"
    NPM_CLIENT="yarn"
  fi
fi

run-happo() {
  SHA=$1
  git checkout --quiet "$SHA"
  COMMIT_SUBJECT="$(git show -s --format=%s)"

  # Install dependencies (again, since we're potentially in a different place in
  # git history)
  if [ -z "$INSTALL_CMD" ]; then
    # Run yarn/npm install
    ${NPM_CLIENT} install
  else
    # Run custom install command(s)
    eval "$INSTALL_CMD"
  fi

  if [ -f "${NPM_BIN}/happo" ]; then
    "$NPM_BIN"/happo run "$SHA" \
    --link "${CHANGE_URL}" \
    --message "${COMMIT_SUBJECT}"
  else
    echo "NPM package happo.io not installed. Assuming this is the first run."
  fi
}

NPM_BIN=$(${NPM_CLIENT} bin)

# Check if we need to generate a baseline. In some cases, the baseline is
# already there (some other PR uploaded it), and we can just use the existing
# one.
if ! "$NPM_BIN"/happo has-report "$PREVIOUS_SHA"; then
  echo "No previous report found for ${PREVIOUS_SHA}. Generating one..."
  run-happo "$PREVIOUS_SHA"
fi

run-happo "$CURRENT_SHA"

# Compare reports from the two SHAs.
COMMIT_SUBJECT="$(git show -s --format=%s)"
COMMIT_AUTHOR="$(git show -s --format=%ae)"

# `happo compare` exits with an exit code of 113 if there is a diff. To work with
# the exit status, we need to temporarily turn off the fail-on-error behavior.
set +e
SUMMARY=$("$NPM_BIN"/happo compare "$PREVIOUS_SHA" "$CURRENT_SHA" \
  --link "$CHANGE_URL" \
  --message "$COMMIT_SUBJECT" \
  --author "$COMMIT_AUTHOR")
EXIT_CODE=$?
set -e

echo "$SUMMARY"

if [ "$EXIT_CODE" = "113" ]; then
  # There is a diff. We don't want to fail the script in this case.
  exit 0
fi

exit $EXIT_CODE
